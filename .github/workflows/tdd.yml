# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI Build

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest
    container: rofrano/pipeline-selenium:latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     python-version: ["3.8", "3.9", "3.10"]
    # Required services
    services:
      # Label used to access the service container
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: CIdb
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # Steps for the build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install libraries for PostgreSQL
        run: |
          apt-get update
          apt-get install -y gcc libpq-dev make sudo
      - name: Install dependencies
        run:
          make install
          # apt-get update
          # apt-get install -y gcc libpq-dev make sudo
          # sudo python3 -m pip install --upgrade pip wheel
          # sudo pip install -r requirements.txt
          # python -m pip install --upgrade pip wheel
          # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Linting
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Run unit tests with nose
        run: |
          export FLASK_APP=service:app
          nosetests
        env:
          DATABASE_URI: "postgresql://postgres:1234@postgres:5432/CIdb"
      - name: Upload code coverage
        uses: codecov/codecov-action@v2
        with:
          version: "v0.1.13"
    # Uncomment the following 2 lines during hands-on lab
